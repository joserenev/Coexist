type User @model {
  id: ID!
  username: String
  email: String
  name: String
  phone: String
  groups: [UserGroups] @connection(name: "UserGroups")
  createdAt: String
  updatedAt: String
  pictureURL: String
  lastPageLoad: String
  heartbeat: String
}

type UserGroups @model (queries: null){
  id: ID!
  user: User @connection(name: "UserGroups")
  group: Group @connection(name: "GroupUsers")
}

type Group @model {
  id: ID!
  name: String
  owner: User @connection
  type: String
  description: String
  users: [UserGroups] @connection(name: "GroupUsers")
  lastReceiptCalculationTime: String
  createdAt: String
  updatedAt: String
  pictureURL: String
  totalBudget: String
  remainingBalance: String
  receipts: [Receipt] @connection(name: "GroupReceipts")
  groupCalculations: [ExpensesCalculation] @connection(name: "GroupCalculations")
}

type Receipt @model {
  id: ID!
  owner: User @connection
  name: String
  description: String
  memberSplit: String
  totalAmount: String
  createdAt: String
  updatedAt: String
  group: Group @connection(name: "GroupReceipts")
  receiptImageUrl: String
  approvalStatus: String
  approvedDate: String
  approverList: [String]
}

type ExpensesCalculation @model {
  id: ID!
  cycleEndDate: String
  totalExpenditure: String
  expenseDivision: String
  group: Group @connection(name: "GroupCalculations")
}
